{
  "id": "get_basic_minimal",
  "description": "Tiny demo test: Clone the testrepos/basic/r1 git annex repo and 'get' a single file. The test verifies that we get the files we want and their content via hash (curtesy of testkraut). Few tests for expected Git meta data files verify that we have an annex branch and a master branch, and other minor bits.",
  "inputs": {
    "test implementation script": {
      "type": "file",
      "value": "get_basic_minimal.sh"
    },
    "validation script": {
      "type": "file",
      "value": "print_num_localkeys.sh"
    }
  },
  "outputs": {
    "file:repo/.git/HEAD": {
      "type": "file", 
      "value": "repo/.git/HEAD"
    }, 
    "file:repo/.git/annex/index": {
      "type": "file", 
      "value": "repo/.git/annex/index"
    }, 
    "we have git indicator": {
      "type": "file", 
      "value": "repo/.git/config"
    }, 
    "default repo description": {
      "sha1sum": "9635f1b7e12c045212819dd934d809ef07efa2f4",
      "type": "file", 
      "value": "repo/.git/description"
    },
    "we have an annex branch": {
      "type": "file", 
      "value": "repo/.git/refs/heads/git-annex"
    }, 
    "we have a master branch": {
      "type": "file", 
      "value": "repo/.git/refs/heads/master"
    }, 
    "we cloned from ORIGIN": {
      "type": "file", 
      "value": "repo/.git/refs/remotes/origin/HEAD"
    }, 
    "file directly in Git": {
      "sha1sum": "60480fec1111aabc5a86546f8d1b5027cc539af3",
      "type": "file", 
      "value": "repo/INFO.txt"
    }, 
    "file obtained via git annex": {
      "sha1sum": "a8fdc205a9f19cc1c7507a60c4f01b13d11d7fd0",
      "type": "file", 
      "value": "repo/test-annex.dat"
    }, 
    "tests::0::stdout": {
      "type": "string", 
      "contains": [
        "get test-annex.dat",
        "(merging origin/git-annex into git-annex...)"
      ],
      "endswith": "ecording state in git...)<NEWLINE>"
    },
    "tests::1::stdout": {
      "type": "string", 
      "value": " 1<NEWLINE>"
    }
  }, 
  "tests": [
    {
      "command": [
        "sh", 
        "get_basic_minimal.sh"
      ], 
      "type": "shell"
    },
    {
      "command": [
        "sh", 
        "-c",
        "cd repo && sh ../print_num_localkeys.sh"
      ], 
      "type": "shell"
    }
  ], 
  "version": 0
}
